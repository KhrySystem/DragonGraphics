include(${DragonEngine_SOURCE_DIR}/cmake/bin2h.cmake)
file(GLOB files LIST_DIRECTORIES OFF ${CMAKE_CURRENT_SOURCE_DIR}/src/shaders/*.in)

foreach(f ${files})
    cmake_path(GET f FILENAME n)
    cmake_path(GET f STEM LAST_ONLY l)
    cmake_path(GET l EXTENSION LAST_ONLY m)
    cmake_path(GET f STEM s)
    cmake_path(GET f EXTENSION e)
    configure_file(${f} ${CMAKE_CURRENT_BINARY_DIR}/src/shaders/${l})

    if(${Vulkan_glslc_FOUND})
        message(STATUS "Building ${l} with glslc")
        execute_process(COMMAND ${Vulkan_GLSLC_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/src/shaders/${l} -o ${CMAKE_CURRENT_BINARY_DIR}/src/shaders/${s}${m}.spv --target-env=vulkan1.2 OUTPUT_QUIET)
    elseif(${Vulkan_glslangValidator_FOUND})
        message(STATUS "Building ${l} with glslangValidator")
        execute_process(COMMAND ${Vulkan_GLSLANG_VALIDATOR_EXECUTABLE} -V ${CMAKE_CURRENT_BINARY_DIR}/src/shaders/${l} -o ${CMAKE_CURRENT_BINARY_DIR}/src/shaders/${s}${m}.spv --target-env vulkan1.2)
    else()
        message(WARNING "Using prebuilt SPIR-V Binaries")
    endif()

    message(STATUS "Adding ${s}${m}.spv to ${s}${m}.hpp")
    bin2h(SOURCE_FILE ${CMAKE_CURRENT_BINARY_DIR}/src/shaders/${s}${m}.spv HEADER_FILE ${CMAKE_CURRENT_SOURCE_DIR}/include/dragon/graphics/shaders/${s}${m}.hpp VARIABLE_NAME ${s}${e}_SOURCE)
endforeach()